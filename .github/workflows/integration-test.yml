name: integration-test

on:
  push:
  pull_request:
  schedule:
    - cron: "0 * * * *"

jobs:

  integration-test-local:
    name: integration-test-local-node-${{ matrix.node }}-sdk-${{ matrix.sdk_ver }}
    environment: GitLab
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node:
          - 16
          - 15
          - 14
          - 13
          - 12
          - 10
        sdk_ver:
          - 0.8.4
    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: checkout-ic
        run: |
          pushd ${{ runner.temp }}
          git clone https://gitlab-ci-token:${{ secrets.GITLAB_TOKEN }}@gitlab.com/dfinity-lab/public/ic.git
          popd

      - name: ic-artifacts
        run: |
          sudo apt install -y \
            rclone

          pushd ${{ runner.temp }}/ic

          pip3 install --user -r gitlab-ci/src/requirements.txt

          gitlab-ci/src/artifacts/rclone_download.py \
            --latest-to \
            --remote-path=release \
            --out=artifacts/release
          gunzip artifacts/release/ic-rosetta-api.gz
          chmod u+x artifacts/release/ic-rosetta-api

          mkdir -p ~/.local/bin
          echo ~/.local/bin >> $GITHUB_PATH
          mv artifacts/release/ic-rosetta-api ~/.local/bin

          gitlab-ci/src/artifacts/rclone_download.py \
            --latest-to \
            --remote-path=canisters \
            --out=artifacts/canisters
          gunzip artifacts/canisters/ledger-canister.wasm.gz

          popd

      - name: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: setup-dfx
        run: |
          curl -L https://sdk.dfinity.org/downloads/dfx/${{ matrix.sdk_ver }}/x86_64-linux/dfx-${{ matrix.sdk_ver }}.tar.gz | tar xz --strip-components 1 -C ~/.local/bin

      - name: setup-nix
        uses: cachix/install-nix-action@v16

      - name: setup-nghttpx
        run: |
          nix profile install nixpkgs#nghttp2

      - name: test
        run: |
          mkdir ${{ runner.temp }}/test
          cp \
            ${{ runner.temp }}/ic/rs/rosetta-api/ledger.did \
            ${{ runner.temp }}/ic/rs/rosetta-api/log_config.yml \
            ${{ runner.temp }}/ic/artifacts/canisters/ledger-canister.wasm \
            dfx.json \
            ${{ runner.temp }}/test

          pushd ${{ runner.temp }}/test

          dfx start \
            --background \
            --clean \
            --host 127.0.0.1:8000

          dfx deploy \
            --argument "record { minting_account = \"ea2d973e67dcbcb00f1cfb36d05d600eef68c7513c18dac8ef52d165c1d38c36\"; initial_values = vec { record { \"db0bd98f8268213b0b74b238c1611848830f47a5c416ae27ae4b80cde7216c57\"; record { e8s = 18446744073709551615 } } }; max_message_size_bytes = null; transaction_window = null; archive_options = null; send_whitelist = vec {}}" \
            --network=local \
            --no-wallet \
            ledger

          nghttpx \
            --backend 127.0.0.1,8000 \
            --frontend '127.0.0.1,2053;no-tls' &

          ic-rosetta-api \
            --canister-id $(jq -r .ledger.local .dfx/local/canister_ids.json) \
            --ic-url http://127.0.0.1:2053 \
            --address 127.0.0.1 \
            --port 8080 \
            --store-type sqlite-in-memory &

          popd

          sleep 60

          npm install
          npm run-script build
          node --unhandled-rejections=strict ./test/test-local.js

      - name: artifact-upload
        uses: actions/upload-artifact@v2
        if: ${{ matrix.node == 14 }}
        with:
          name: dist
          path: dist
